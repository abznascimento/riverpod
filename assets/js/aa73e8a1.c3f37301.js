"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[944],{7173:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return d},default:function(){return c}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),o=["components"],l={title:"^0.13.0 to ^0.14.0"},p=void 0,s={unversionedId:"migration/0.13.0_to_0.14.0",id:"migration/0.13.0_to_0.14.0",title:"^0.13.0 to ^0.14.0",description:"p\xe1gina n\xe3o traduzida, ainda.",source:"@site/i18n/pt-BR/docusaurus-plugin-content-docs/current/migration/0.13.0_to_0.14.0.mdx",sourceDirName:"migration",slug:"/migration/0.13.0_to_0.14.0",permalink:"/docs/migration/0.13.0_to_0.14.0",editUrl:"https://github.com/rrousselGit/river_pod/edit/master/website/i18n/pt-BR/docusaurus-plugin-content-docs/current/migration/0.13.0_to_0.14.0.mdx",tags:[],version:"current",frontMatter:{title:"^0.13.0 to ^0.14.0"},sidebar:"Sidebar",previous:{title:"Testing",permalink:"/docs/cookbooks/testing"},next:{title:"^0.14.0 to ^1.0.0",permalink:"/docs/migration/0.14.0_to_1.0.0"}},d=[{value:"The changes",id:"the-changes",children:[],level:2},{value:"Using the migration tool to automatically upgrade your projects to the new syntax",id:"using-the-migration-tool-to-automatically-upgrade-your-projects-to-the-new-syntax",children:[{value:"Installing the command line",id:"installing-the-command-line",children:[],level:3},{value:"Usage",id:"usage",children:[],level:3}],level:2}],u={toc:d};function c(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"p\xe1gina n\xe3o traduzida, ainda."),(0,i.kt)("p",null,"With the release of version ",(0,i.kt)("inlineCode",{parentName:"p"},"0.14.0")," of Riverpod, the syntax for using ",(0,i.kt)("a",{parentName:"p",href:"../providers/state_notifier_provider"},"StateNotifierProvider")," changed\n(see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/rrousselGit/river_pod/issues/341"},"https://github.com/rrousselGit/river_pod/issues/341")," for the explanation)."),(0,i.kt)("p",null,"For the entire article, consider the following ",(0,i.kt)("a",{parentName:"p",href:"https://pub.dev/documentation/state_notifier/latest/state_notifier/StateNotifier-class.html"},"StateNotifier"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"class MyModel {}\n\nclass MyStateNotifier extends StateNotifier<MyModel> {\n  MyStateNotifier(): super(MyModel());\n}\n")),(0,i.kt)("h2",{id:"the-changes"},"The changes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"../providers/state_notifier_provider"},"StateNotifierProvider")," takes an extra generic parameter, which should be\nthe type of the state of your ",(0,i.kt)("a",{parentName:"p",href:"https://pub.dev/documentation/state_notifier/latest/state_notifier/StateNotifier-class.html"},"StateNotifier"),"."),(0,i.kt)("p",{parentName:"li"},"Before:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"final provider = StateNotifierProvider<MyStateNotifier>((ref) {\n  return MyStateNotifier();\n});\n")),(0,i.kt)("p",{parentName:"li"},"After:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"final provider = StateNotifierProvider<MyStateNotifier, MyModel>((ref) {\n  return MyStateNotifier();\n});\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"to obtain the ",(0,i.kt)("a",{parentName:"p",href:"https://pub.dev/documentation/state_notifier/latest/state_notifier/StateNotifier-class.html"},"StateNotifier"),", you should now read ",(0,i.kt)("inlineCode",{parentName:"p"},"myProvider.notifier")," instead of just ",(0,i.kt)("inlineCode",{parentName:"p"},"myProvider"),":"),(0,i.kt)("p",{parentName:"li"},"Before:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Widget build(BuildContext context, ScopedReader watch) {\n  MyStateNotifier notifier = watch(provider);\n}\n")),(0,i.kt)("p",{parentName:"li"},"After:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Widget build(BuildContext context, ScopedReader watch) {\n  MyStateNotifier notifier = watch(provider.notifier);\n}\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"to listen to the state of the ",(0,i.kt)("a",{parentName:"p",href:"https://pub.dev/documentation/state_notifier/latest/state_notifier/StateNotifier-class.html"},"StateNotifier"),", you should now read ",(0,i.kt)("inlineCode",{parentName:"p"},"myProvider")," instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"myProvider.state"),":"),(0,i.kt)("p",{parentName:"li"},"Before:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Widget build(BuildContext context, ScopedReader watch) {\n  MyModel state = watch(provider.state);\n}\n")),(0,i.kt)("p",{parentName:"li"},"After:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Widget build(BuildContext context, ScopedReader watch) {\n  MyModel state = watch(provider);\n}\n")))),(0,i.kt)("h2",{id:"using-the-migration-tool-to-automatically-upgrade-your-projects-to-the-new-syntax"},"Using the migration tool to automatically upgrade your projects to the new syntax"),(0,i.kt)("p",null,"With version 0.14.0 came the release of a command line tool for Riverpod,\nwhich can help you migrate your projects."),(0,i.kt)("h3",{id:"installing-the-command-line"},"Installing the command line"),(0,i.kt)("p",null,"To install the migration tool, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"dart pub global activate riverpod_cli\n")),(0,i.kt)("p",null,"You should now be able to run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"riverpod --help\n")),(0,i.kt)("h3",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Now that the command line is installed, we can start using it."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"First, open the project you want to migrate in your terminal."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Do not")," upgrade Riverpod.",(0,i.kt)("br",{parentName:"li"}),"The migration tool will upgrade the version of Riverpod for you."),(0,i.kt)("li",{parentName:"ul"},"Make sure that your project does not contain errors."),(0,i.kt)("li",{parentName:"ul"},"Execute:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"riverpod migrate\n")))),(0,i.kt)("p",null,"The tool will then analyze your project and suggest changes. For example you may see:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"Widget build(BuildContext context, ScopedReader watch) {\n-  MyModel state = watch(provider.state);\n+  MyModel state = watch(provider);\n}\n\nAccept change (y = yes, n = no [default], A = yes to all, q = quit)? \n")),(0,i.kt)("p",null,"To accept the change, simply press ",(0,i.kt)("kbd",null,"y"),". Otherwise to reject it, press ",(0,i.kt)("kbd",null,"n"),"."))}c.isMDXComponent=!0}}]);